#include <bits/stdc++.h>
using namespace std;

//Longest Peak problem


//time complexity - o(n)  space complexity - o(1)
int longestPeak(vector<int> ar)
{
    int n = ar.size();
    int ans = 0;

    for (int i = 1; i < n - 1;)
    {
        if (ar[i - 1] < ar[i] && ar[i] > ar[i + 1])
        {
            int left = i - 1;
            while (left >= 0 && ar[left] < ar[left + 1])
                left--;

            int right = i + 1;
            while (right < n && ar[right - 1] > ar[right])
                right++;

            i = right;
            ans = max(ans, right - left - 1);
        }
        else
            i++;

    }

    return ans;
}

int main() {

#ifndef ONLINE_JUDGE
    //for getting input from input.txt
    freopen ("input.txt", "r", stdin);
    //for writing output to output.txt
    freopen ("output.txt", "w", stdout);
#endif

    int n;
    cin >> n;

    vector<int> v(n);
    for (int i = 0; i < n; i++)
    {
        cin >> v[i];
    }

    cout << longestPeak(v) << endl;

}

